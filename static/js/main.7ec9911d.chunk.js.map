{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","assets/ava.gif","redux/dialogs-reducer.jsx","components/News/News.module.css","assets/Spinner-1s-200px (3).gif","components/common/Preloader/Preloader.module.css","assets/logo.gif","components/Music/Music.module.css","components/Settings/Settings.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Login/LoginForm.jsx","redux/auth-reducer.jsx","components/Login/Login.jsx","utils/obj-helpers.js","redux/users-reducer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.jsx","redux/sidebar-reducer.jsx","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/forms-controls/FormsControl.js","components/common/forms-controls/FormsControl.module.css","components/Users/Users.module.css","components/common/Preloader/Preloader.jsx","utils/validator/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.jsx"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getUserProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","getAuth","login","email","password","rememberMe","logout","module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","Navbar","className","classes","nav","item","to","activeClassName","activeLink","Music","props","News","container","Settings","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","SET_USER_DATA","usersId","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","connect","auth","length","stopSubmit","_error","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setUsersTotalCount","count","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","e","User","user","usersAvatar","src","photos","small","userPhoto","disabled","some","Users","key","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","Component","compose","bind","page","totalCount","Header","header","logo","loginBlock","HeaderContainer","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validator","component","text","validate","preloader","loading","alt","value","MaxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.7ec9911d.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d13010db-d825-4b89-b5a1-3acdd313b6bb\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    getUserProfile(userId) {\r\n        console.warn('error')\r\n        return profileAPI.getUserProfile(userId);\r\n    },\r\n}\r\n\r\n//1. формируем API\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });// need use content-type for file\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__WLDqb\",\"item\":\"Navbar_item__sQnDx\",\"activeLink\":\"Navbar_activeLink__1HUSd\"};","module.exports = __webpack_public_path__ + \"static/media/ava.4698bc3a.gif\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Poli'},\r\n        {id: 2, name: 'Mom'},\r\n        {id: 3, name: 'Andrew'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Anastasiya'},\r\n        {id: 6, name: 'Igor'}],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Yo'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n        {id: 6, message: 'Yo'}]\r\n\r\n};\r\n//ноушен\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 7, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__rnT6z\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px (3).26a35ff9.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3G50K\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f32659af.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper-content\":\"Music_app-wrapper-content__1tJIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper-content\":\"Settings_app-wrapper-content__1Q200\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/friends\" activeClassName={classes.activeLink}>Friends</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n    </nav>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n           tttttt\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/forms-controls/FormsControl\";\r\nimport {required} from \"../../utils/validator/validators\";\r\nimport classes from '../common/forms-controls/FormsControl.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField(' Email', 'email', [required], Input)}\r\n        {createField(' Password', 'password', [required], Input, {type: \"password\"})}\r\n        {createField(null, 'rememberMe', [], Input, {type: \"checkbox\"}, 'Remember me' )}\r\n\r\n        {error && <div className={classes.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm) // transfer the component around which need to create reduxForm\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst SET_USER_DATA = './auth-reducer/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    usersId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData()); // после логинизации еще раз запускаем getAuthUserData\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n        // в качестве общей для формы ошибки устанавливаем мессаджес, если массив больше нуля\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n        ; // если вылогинились удалается кука и нужно зачистить состояние и удалить всю информацию о юзере\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {LoginReduxForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login = (props) => {\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }// из пропсов вызываем логин и вызываем по этим же именем приходит колбек, который внутри себя диспатчит вызов санк криейтора, колл бэк принимает эти параметры и передает их в санк криейтор\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <div>to start using the application in test mode, enter\r\n            Email: free@samuraijs.com\r\n            Password: free\r\n        </div>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login); // здесть логин как санк криэйтор\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/obj-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USRES = 'SET_USRES';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n               users: updateObjectInArray(state.users, action.userId, 'id',{followed: true }  )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed: false }  )\r\n            }\r\n        case SET_USRES: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USRES, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\n\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let[portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={classes.pages}>\r\n        {portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>\r\n        }\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n            return <span className={currentPage === p && classes.selectedPage}\r\n                         onClick={(e) => {\r\n                             onPageChanged(p);\r\n                         }}> {p} </span>\r\n        })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n        }\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from \"../../assets/ava.gif\";\r\nimport classes from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ( {user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n        <span>\r\n            <div className={classes.usersAvatar}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={classes.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>Unfollow</button>\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n               <span>\r\n                   <div>{user.name}</div>\r\n                   <div>{user.status}</div>\r\n                </span>\r\n            {/*<span>*/}\r\n            {/*  <div>{u.location.country}</div>*/}\r\n            {/*  <div>{u.location.city}</div>*/}\r\n            {/*</span>*/}\r\n              </span>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div className={classes.container}>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize} totalUsersCount={totalUsersCount}/>\r\n        <div>\r\n            {users.map(u => <User\r\n                    user={u}\r\n                    key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    follow={props.follow}\r\n                    unfollow={props.unfollow}\r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","//selectors - a function that receives the state and returns the part of the state that we need. Intended for difficult operation\r\n\r\nimport {createSelector} from \"reselect\";\r\nconst getUsersSel = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSel, (users) => {\r\n    return users.filter(u => true);\r\n}); // function return selector\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress= (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    setUsersTotalCount,\r\n    toggleFollowingInProgress,\r\n    unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n//use selectors\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        setUsersTotalCount,\r\n        toggleFollowingInProgress,\r\n        getUsers: requestUsers\r\n    }),\r\n    // withAuthRedirect,\r\n)(UsersContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport logo from '../../assets/logo.gif';\r\nimport classes from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src={logo}/>\r\n        <div className={classes.loginBlock}>\r\n            { props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n    </header>;\r\n\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = './app-reducer/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const  initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers= combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Login from \"./components/Login/Login\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n\n\nconst MainApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n","import React from \"react\";\r\nimport classes from './FormsControl.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta:{touched, error}, children}) => { //таким способом мы достаем из пропсов всё, кроме мета и инпута\r\n\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n\r\n}\r\nexport const createField = (placeholder, name, validator, component, props = {}, text = '') =>(\r\n    <div><Field placeholder={placeholder} component={component} name={name}\r\n           validate={validator}\r\n        {...props}/>{text}</div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3Y-tR\",\"error\":\"FormsControl_error__3ErNT\",\"formSummaryError\":\"FormsControl_formSummaryError__3c531\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__262gJ\",\"usersAvatar\":\"Users_usersAvatar__1m5gi\"};","import React from 'react';\r\nimport loading from '../../../assets/Spinner-1s-200px (3).gif';\r\nimport classes from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return <div className={classes.preloader}>\r\n        <img src={loading} alt=\"loading\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = value =>{\r\n    if(value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const MaxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n//замыкание","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2eiOd\",\"pages\":\"Paginator_pages__2d0Bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3c3Xd\",\"loginBlock\":\"Header_loginBlock__11joV\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = './profile-reducer/ADD-POST';\r\nconst SET_USER_PROFILE = './profile-reducer/SET_USER_PROFILE';\r\nconst SET_STATUS = './profile-reducer/SET_STATUS';\r\nconst DELETE_POST = './profile-reducer/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = './profile-reducer/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hey, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post.', likesCount: 3},\r\n        {id: 3, message: 'Puzan!', likesCount: 1345}],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getUserProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            });\r\n    }\r\n}\r\n\r\n//7 create action creator + thunk\r\nexport const setStatus = (status) =>\r\n    ({type: SET_STATUS, status});\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setStatus(response.data))\r\n            });\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0)\r\n                    dispatch(setStatus(status))\r\n            });\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n            if (response.data.resultCode === 0){\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n        };\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getUserProfile(userId))\r\n            }else {\r\n                dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n                return Promise.reject(response.data.messages[0]); // promise which rejected error\r\n        };\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}