{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","className","classes","profileDescription","formSummaryError","createField","Input","lookingForAJob","type","lookingForAJobDescription","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","contactTitle","contactValue","Contact","contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfo","profilePhoto","src","photos","large","userPhoto","mainPhoto","target","files","length","formData","then","Post","item","message","likesCount","maxLength10","MaxLengthCreator","AddNewPostReduxForm","postsBlock","addNewPost","Field","validate","required","component","name","buttonAddPost","MyPosts","memo","postsElement","posts","reverse","p","id","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","isAuth","auth","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","updateComponent","prevProps","prevState","snapshot","to","content","compose","withRouter"],"mappings":"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","file":"static/js/3.919619d1.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3EliV\",\"profilePhoto\":\"ProfileInfo_profilePhoto__iIth5\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3C5CH\",\"profileDescription\":\"ProfileInfo_profileDescription__3eIQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__ZpG7k\",\"posts\":\"MyPosts_posts__GoXFi\",\"addNewPost\":\"MyPosts_addNewPost__33V3i\",\"buttonAddPost\":\"MyPosts_buttonAddPost__3Ua2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2T75z\",\"ava\":\"Profile_ava__2Vsh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3y6Tn\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () =>{\r\n         setStatus(props.status)\r\n    }, [props.status] )// []-запускает юзЭффект только в момент перерисовки, пустой массив передавать нельзя\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n\r\n    }\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={updateStatus} autoFocus onBlur={deactivateEditMode}\r\n                           value={status}></input>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/forms-controls/FormsControl\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form className={classes.profileDescription}\r\n                 onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={classes.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <span>Fullname: </span>{createField('Full name', \"fullName\", [], Input)}\r\n        </div>\r\n        {/*<div><span>userId: </span>{props.profile.userId}</div>*/}\r\n        <div>\r\n            <span>Looking for a job: </span>{profile.lookingForAJob ? 'yes' : 'no'}{createField('', \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <span>My professional skills: </span>{profile.lookingForAJobDescription}{createField('My professional skills...', \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <span>Contacts: </span>{Object.keys(profile.contacts).map(key => {\r\n            return <div>{key}: {createField(key, \"contacts.\" + key, [], Input)}</div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux;","import React, {useState} from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/ava.gif\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        debugger\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return <div className={classes.profileInfo}>\r\n        <div className={classes.profilePhoto}>\r\n            <img src={profile.photos.large || userPhoto} className={classes.mainPhoto}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n            {editMode\r\n                ? <ProfileDataForm onSubmit={onSubmit} profile={profile}/>\r\n                : <ProfileData isOwner={isOwner} goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }} profile={profile}/>}\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return  <div className={classes.item}>\r\n            <img src= \"https://image.flaticon.com/icons/svg/194/194938.svg\"/>\r\n        {props.message}\r\n        <div>\r\n        <span>like </span> {props.likesCount}\r\n        </div>\r\n        </div>\r\n\r\n}\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {MaxLengthCreator, required} from \"../../../utils/validator/validators\";\r\nimport {Textarea} from \"../../common/forms-controls/FormsControl\";\r\n\r\nconst maxLength10 = MaxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <Form onSubmit={props.handleSubmit} >\r\n            <div className={classes.addNewPost}>\r\n                <Field validate={[required, maxLength10 ]} component={Textarea} name='newPostText'/>\r\n            </div>\r\n            <div className={classes.buttonAddPost}>\r\n                <button>Add post</button>\r\n            </div>\r\n\r\n        </Form>\r\n    </div>\r\n}\r\nexport const AddNewPostReduxForm = reduxForm({form: 'profile-add-post-form\\''})(AddNewPostForm);\r\n","import React from 'react';\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {AddNewPostReduxForm} from \"./AddNewPostForm\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement =\r\n        [...props.posts] // не можем изменять объект на прямую, делаем копию\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n        <div className={classes.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateProps, mapDispatchProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n//\r\n//             (store) => {\r\n//                 let state = props.store.getState();\r\n//\r\n//                 let addPost = () => {\r\n//                     props.store.dispatch(addPostActionCreator());\r\n//                 }\r\n//\r\n//                 let onPostOnChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     props.store.dispatch(action);\r\n//\r\n//                 }\r\n//\r\n//\r\n//                 return <MyPosts updateNewPropsText={onPostOnChange}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>\r\n//\r\n//         }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     updateStatus={props.updateStatus}\r\n                     saveProfile={props.saveProfile}\r\n                     status={props.status}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport classes from \"./Profile.module.css\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateComponent() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n        this.props.getStatus(userId); //2\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateComponent();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.updateComponent();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth === false) return <Redirect to=\"/login\"/>;\r\n        return (\r\n            <div className={classes.content}>\r\n                <Profile  {...this.props}\r\n                          isOwner={!this.props.match.params.userId}\r\n                          profile={this.props.profile}\r\n                          status={this.props.status}\r\n                          updateStatus={this.props.updateStatus}\r\n                          savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status, //3 достаем юзерв из стейта\r\n    authorizedUserId: state.auth.userId,\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}