{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialodItem/DialogItem.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Message/Messages.module.css","assets/logo.gif","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/ava.gif","head.jpg","components/Music/Music.module.css","components/News/News.module.css","components/Settings/Settings.module.css","serviceWorker.js","redux/profile-reducer.jsx","redux/dialogs-reducer.jsx","redux/sidebar-reducer.jsx","redux/users-reducer.jsx","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Dialogs/Message/Messages.jsx","components/Dialogs/DialodItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/UsersC.jsx","components/Users/UsersContainer.jsx","App.js","StoreContext.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","newPostText","posts","id","message","likesCount","profileReducer","state","action","type","newPost","newText","newMessageBody","dialogs","name","messages","dialogsReducer","body","sidebarReducer","users","pageSize","totalUsersCount","currentPage","usersReducer","map","u","userId","followed","count","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","className","classes","header","src","logo","Navbar","nav","item","to","activeClassName","activeLink","ProfileInfo","descriptonBlock","Post","props","MyPosts","postsElement","p","key","newPostElement","React","createRef","postsBlock","addNewPost","onChange","e","text","current","value","updateNewPostText","ref","buttonAddPost","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","content","Music","News","Settings","Messages","DialogItem","path","dialog","active","dialogItem","ava","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","sendMessage","placeholder","target","updateNewMessageBody","DialogsContainer","updateNewMessageBodyCreator","UsersC","onPageChenged","pageNumber","setCurrentPage","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","pagesCount","Math","ceil","pages","i","push","selectedPage","usersAvatar","photos","small","userPhoto","unfollow","follow","status","Component","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","createContext","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.10231aac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__SgwQc\",\"dialog\":\"Dialogs_dialog__1Kqe5\",\"dialogsItems\":\"Dialogs_dialogsItems__5aD5j\",\"active\":\"Dialogs_active__3FwY9\",\"messages\":\"Dialogs_messages__1_qvl\",\"message\":\"Dialogs_message__26qhQ\",\"sendMessage\":\"Dialogs_sendMessage__3vguF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__ZpG7k\",\"posts\":\"MyPosts_posts__GoXFi\",\"addNewPost\":\"MyPosts_addNewPost__33V3i\",\"buttonAddPost\":\"MyPosts_buttonAddPost__3Ua2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__CvBSM\",\"dialogItem\":\"DialogItem_dialogItem__qJNd0\",\"dialogsItem\":\"DialogItem_dialogsItem__Pi-Y-\",\"active\":\"DialogItem_active__2W6Uw\",\"messages\":\"DialogItem_messages__26K7Z\",\"message\":\"DialogItem_message__ND9Ay\",\"ava\":\"DialogItem_ava___0vk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Users_selectedPage__2aU6w\",\"usersAvatar\":\"Users_usersAvatar__1m5gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__WLDqb\",\"item\":\"Navbar_item__sQnDx\",\"activeLink\":\"Navbar_activeLink__1HUSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__13-lW\",\"message\":\"Messages_message__2ZB38\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f32659af.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3c3Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2T75z\",\"ava\":\"Profile_ava__2Vsh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptonBlock\":\"ProfileInfo_descriptonBlock__eV8Bo\",\"head\":\"ProfileInfo_head__lBqze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3y6Tn\"};","module.exports = __webpack_public_path__ + \"static/media/ava.4698bc3a.gif\";","module.exports = __webpack_public_path__ + \"static/media/head.a77b1c29.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper-content\":\"Music_app-wrapper-content__1tJIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper-content\":\"News_app-wrapper-content__3rTaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper-content\":\"Settings_app-wrapper-content__1Q200\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\n\r\nlet initialState = {\r\n    newPostText: 'yo!',\r\n    posts: [\r\n        {id: 1, message: 'Hey, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post.', likesCount: 3},\r\n        {id: 3, message: 'Puzan!', likesCount: 1345}]\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\n\r\n\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    newMessageBody: 'yo!',\r\n    dialogs: [\r\n        {id: 1, name: 'Poli'},\r\n        {id: 2, name: 'Mom'},\r\n        {id: 3, name: 'Andrew'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Anastasiya'},\r\n        {id: 6, name: 'Igor'}],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Yo'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n        {id: 6, message: 'Yo'}]\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n            ...state,\r\n            newMessageBody: action.body\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 7, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\n\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\nexport default dialogsReducer;","\r\nlet initialState = {};\r\n\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USRES = 'SET_USRES';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 3\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USRES:{\r\n            return { ...state, users: action.users}\r\n                    // [...state.users, ...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followAC = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsersAC = (users) => ({type: SET_USRES, users})\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\nlet reducers= combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport logo from '../../assets/logo.gif';\r\nimport classes from \"./Header.module.css\";\r\nconst Header = () => {\r\n    return <header className={classes.header}>\r\n        <img src={logo}/>\r\n    </header>;\r\n\r\n}\r\nexport default Header;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/friends\" activeClassName={classes.activeLink}>Friends</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n    </nav>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport head from '../../../head.jpg'\r\n\r\nconst ProfileInfo = () => {\r\n    return <div>\r\n        {/*<div >*/}\r\n        {/*    <img className={classes.back} src={head}/>*/}\r\n        {/*</div>*/}\r\n        <div className={classes.descriptonBlock}>\r\n            ava + description\r\n                  </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return  <div className={classes.item}>\r\n            <img src= \"https://image.flaticon.com/icons/svg/194/194938.svg\"/>\r\n        {props.message}\r\n        <div>\r\n        <span>like </span> {props.likesCount}\r\n        </div>\r\n        </div>\r\n\r\n}\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post message={p.message}  key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = (e) => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <div className={classes.addNewPost}>\r\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n            </div>\r\n            <div className={classes.buttonAddPost}>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={classes.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n let mapDispatchProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n           dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateProps, mapDispatchProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n//\r\n//             (store) => {\r\n//                 let state = props.store.getState();\r\n//\r\n//                 let addPost = () => {\r\n//                     props.store.dispatch(addPostActionCreator());\r\n//                 }\r\n//\r\n//                 let onPostOnChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     props.store.dispatch(action);\r\n//\r\n//                 }\r\n//\r\n//\r\n//                 return <MyPosts updateNewPropsText={onPostOnChange}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>\r\n//\r\n//         }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )","import React from 'react';\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={classes.content}>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer\r\n            // store={props.store}\r\n        />\r\n    </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n           tttttt\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Messages.module.css';\r\n\r\nconst Messages = (props) => {\r\n    return <div className={classes.messages}>\r\n        <div className={classes.message}>\r\n        {props.message}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes, {string} from 'prop-types';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={classes.dialog + ' ' + classes.active}>\r\n        <div className={classes.dialogItem}>\r\n            <img className={classes.ava} src=\"https://image.flaticon.com/icons/svg/194/194938.svg\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default DialogItem;\r\nDialogItem.propTypes = {\r\n    name: PropTypes.string\r\n};","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport Messages from \"./Message/Messages\";\r\nimport DialogItem from \"./DialodItem/DialogItem\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Messages message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div>\r\n                <div className={classes.sendMessage}>\r\n                    <textarea placeholder='Enter your massage...'\r\n                              onChange={onNewMessageChange}\r\n                              value={newMessageBody}> </textarea>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={addMessage}\r\n                        className={classes.sendMessage}>\r\n                        Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    updateNewMessageBody: (body) => {\r\n        dispatch(updateNewMessageBodyCreator(body));\r\n\r\n    },\r\n    sendMessage: () => {\r\n        dispatch(sendMessageCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport userPhoto from \"../../assets/ava.gif\";\r\nimport classes from \"./Users.module.css\";\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass UsersC extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n\r\n            });\r\n    }\r\n\r\n    onPageChenged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span onClick={(e) => {\r\n                        this.onPageChenged(p)\r\n                    }} className={this.props.currentPage === p && classes.selectedPage}> {p} </span>\r\n                })}\r\n\r\n            </div>\r\n            {this.props.users.map(u => <div key={u.id}>\r\n        <span className={classes.users}>\r\n            <div className={classes.usersAvatar}>\r\n                <img src={u.photos.small !== null ? u.photos.small : userPhoto} className={classes.userPhoto}/>\r\n            </div>\r\n            <div>\r\n                {u.followed\r\n                    ? <button onClick={() => {\r\n                        this.props.unfollow(u.id)\r\n                    }}>Unfollow</button>\r\n                    : <button onClick={() => {\r\n                        this.props.follow(u.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n                <span>\r\n               <span>\r\n                   <div>{u.name}</div>\r\n                   <div>{u.status}</div>\r\n                </span>\r\n                    {/*<span>*/}\r\n                    {/*  <div>{'u.location.country'}</div>*/}\r\n                    {/*  <div>{'u.location.city'}</div>*/}\r\n                    {/*</span>*/}\r\n              </span>\r\n            </div>)}\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UsersC;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followAC,\r\n    setUsersAC,\r\n    unfollowAC,\r\n    setCurrentPageAC,\r\n    setUsersTotalCountAC,\r\n} from \"../../redux/users-reducer\";\r\nimport UsersC from \"./UsersC\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage\r\n    }\r\n}\r\nlet MapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) =>{\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) =>{\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        }\r\n    }\r\n}\r\nexport default connect (mapStateToProps, MapDispatchToProps)(UsersC);","import React from 'react';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = (props) => {\n\n    return (\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile'\n                           render={() => <Profile\n                               //store={props.store}\n                           />}/>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer\n                               //store={props.store}\n                           />}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nconst Provider = (props) => {\r\n    return <StoreContext.Provider value={props.store}>\r\n        {props.children}\r\n    </StoreContext.Provider>\r\n}\r\n\r\n//export default StoreContext;\r\nexport default Provider;","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport StoreContext from \"./StoreContext\";\nimport {Provider} from \"react-redux\";\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App/>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n//API - application program interfase\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}